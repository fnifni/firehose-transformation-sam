AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Deploys the infrastructure necessary to enable Kinesis Data Firehose
  data transformation via a Lambda function
Parameters:
  EditedBucketName:
    Type: String
  RawBucketName:
    Type: String
Resources:
  AmazonComprehendPIIRedactLambdaFunction:
    Type: AWS::Serverless::Function
    Description: Lambda function invoked by Kinesis Firehose, transforms streaming
      data, puts data back in firehose.
    Properties:
      FunctionName: AmazonComprehendPII-Redact
      Handler: app.lambda_handler
      Runtime: python3.9
      CodeUri: AmazonComprehendPIIRedactLambdaFunction
      Timeout: 60
      Environment:
        Variables:
          keys: Tweet1, Tweet2
      Policies: ComprehendFullAccess
    Metadata:
      SamResourceId: AmazonComprehendPIIRedactLambdaFunction
  RawBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: RawBucketName
  EditedBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: EditedBucketName
  DeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    DependsOn:
    - DeliveryStreamPolicy
    Properties:
      DeliveryStreamName: ComprehendRealTimeBlog
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        BucketARN:
          Fn::GetAtt:
          - EditedBucket
          - Arn
        BufferingHints:
          SizeInMBs: 64
          IntervalInSeconds: 120
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: /aws/kinesisfirehose/ibcd
          LogStreamName: S3Delivery
        EncryptionConfiguration:
          NoEncryptionConfig: NoEncryption
        DynamicPartitioningConfiguration:
          Enabled: true
          RetryOptions:
            DurationInSeconds: 300
        Prefix: ext/AmazonComprehendPII-Redact/region=!{partitionKeyFromLambda:region}/accountId=!{partitionKeyFromLambda:AWS_account}/eventDay=!{partitionKeyFromLambda:eventDay}/
        ErrorOutputPrefix: ext/AmazonComprehendPII-Redact/error/
        RoleARN:
          Fn::GetAtt:
          - DeliveryStreamRole
          - Arn
        ProcessingConfiguration:
          Enabled: true
          Processors:
          - Type: Lambda
            Parameters:
            - ParameterName: LambdaArn
              ParameterValue:
                Fn::GetAtt:
                - AmazonComprehendPIIRedactLambdaFunction
                - Arn
        S3BackupMode: Enabled
        S3BackupConfiguration:
          BucketARN:
            Fn::GetAtt:
            - RawBucket
            - Arn
          RoleARN:
            Fn::GetAtt:
            - DeliveryStreamRole
            - Arn
          BufferingHints:
            SizeInMBs: 64
            IntervalInSeconds: 120
          CloudWatchLoggingOptions:
            Enabled: true
            LogGroupName: /aws/kinesisfirehose/ibcd
            LogStreamName: S3RawDelivery
          EncryptionConfiguration:
            NoEncryptionConfig: NoEncryption
          Prefix: ext/AmazonComprehendPII-Redact/
          ErrorOutputPrefix: ext/AmazonComprehendPII-Redact/error/
  LambdaFirehoseAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
      - Ref: LambdaRole
      PolicyName: Lambda_Firehose_access_policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - firehose:DescribeDeliveryStream
          - firehose:ListDeliveryStreams
          - firehose:ListTagsForDeliveryStream
          - firehose:PutRecord
          - firehose:PutRecordBatch
          Resource:
          - Fn::GetAtt:
            - DeliveryStream
            - Arn
  DeliveryStreamPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
      - Ref: DeliveryStreamRole
      PolicyName: firehose_delivery_policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:AbortMultipartUpload
          - s3:GetBucketLocation
          - s3:GetObject
          - s3:ListBucket
          - s3:ListBucketMultipartUploads
          - s3:PutObject
          Resource:
          - Fn::Sub: arn:aws:s3:::${EditedBucket}
          - Fn::Sub: arn:aws:s3:::${EditedBucket}/*
          - Fn::Sub: arn:aws:s3:::${RawBucket}
          - Fn::Sub: arn:aws:s3:::${RawBucket}/*
        - Effect: Allow
          Action:
          - lambda:InvokeFunction
          - lambda:GetFunctionConfiguration
          Resource:
          - Fn::GetAtt:
            - AmazonComprehendPIIRedactLambdaFunction
            - Arn
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
  DeliveryStreamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Service: firehose.amazonaws.com
          Action: sts:AssumeRole
